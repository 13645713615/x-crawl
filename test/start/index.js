"use strict";var e=require("node:path"),t=require("node:fs"),r=require("node:fs/promises"),o=require("puppeteer"),n=require("chalk"),i=require("node:http"),s=require("node:https"),a=require("node:url"),u=require("https-proxy-agent");const c=console.log,l=n.hex("#a57fff"),f=n.green,m=n.red,h=n.yellow;function p(e){return void 0===e}function d(e){return"number"==typeof e}function g(e){return"object"==typeof e&&e&&!Array.isArray(e)}function y(e){return Array.isArray(e)}async function w(e,t,r,o){if(e&&o>1){const e=t?r:function(e,t=0){let r=Math.floor(Math.random()*e);for(;r<t;)r=Math.floor(Math.random()*e);return r}(r.max,r.min);c(`Id: ${l(o)} - Crawl needs to sleep for ${l(e+"ms")} milliseconds before sending`),await function(e){return new Promise((t=>setTimeout(t,e)))}(e)}else c(`Id: ${l(o)} - Crawl does not need to sleep, send immediately`)}async function C(e,t,r,o){const n=!p(t),i=d(t),s=[];for(const a of e){const{id:e}=a;await w(n,i,t,e),a.crawlCount++;const u=o(a,r).catch((e=>(a.errorQueue.push(e),!1))).then((e=>{!1!==e&&(a.isSuccess=!0,a.crawlSingleRes=e)}));s.push(u)}await Promise.all(s)}async function x(e,t,r,o){const n=!p(t),i=d(t);for(const s of e){const{id:e}=s;await w(n,i,t,e),s.crawlCount++;try{s.crawlSingleRes=await o(s,r),s.isSuccess=!0}catch(e){s.errorQueue.push(e)}}}function S(e,t,r){const o=e[t];e[t]=e[r],e[r]=o}function v(e){if(1===e.length)return e;const t=Math.floor(e.length/2),r=v(e.slice(0,t)),o=v(e.slice(t)),n=[];let i=0,s=0;for(;i<r.length&&s<o.length;)r[i]>=o[s]?(n.push(r[i]),i++):(n.push(o[s]),s++);return i<r.length&&n.push(...r.slice(i)),s<o.length&&n.push(...o.splice(s)),n}async function q(e,t,r,o,n,i){const s=(!r.every((e=>e.priority===r[0].priority))?v(r.map((e=>({...e,valueOf:()=>e.priority})))):r).map(((e,t)=>({id:t+1,isSuccess:!1,maxRetry:e.maxRetry,crawlCount:0,errorQueue:[],requestConfig:e,crawlSingleRes:null})));c(`${f("Start crawling")} - name: ${h(e)}, mode: ${h(t)}, total: ${l(s.length)} `);const a="async"===t?C:x;let u=s;for(;u.length;)if(await a(u,o,n,i),u=u.filter((e=>e.maxRetry&&!e.isSuccess&&e.crawlCount<=e.maxRetry)),u.length){const e=u.map((e=>e.id));c(h(`Ids to retry: [ ${e.join(" - ")} ]`))}const p=[],d=[];return s.forEach((e=>{e.isSuccess?p.push(e.id):d.push(e.id)})),c("Crawl the final result:"),c(f(`  Success - total: ${p.length}, ids: [ ${p.join(" - ")} ]`)),c(m(`    Error - total: ${d.length}, ids: [ ${d.join(" - ")} ]`)),s}function R(e,t){let r=e?`${e}`:"?";if(t)for(const e in t){r+=`&${e}=${t[e]}`}else r=e;return r}function T(e){const{protocol:t,hostname:r,port:o,pathname:n,search:c}=new a.URL(e.url),l="http:"===t,f={agent:e.proxy?u(e.proxy):l?new i.Agent:new s.Agent,protocol:t,hostname:r,port:o,path:n,search:R(c,e.params),method:e.method?.toLocaleUpperCase()??"GET",headers:{},timeout:e.timeout};return f.headers=function(e,t){const r={"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36",...e.headers??{}};return"POST"===t.method&&e.data&&(r["Content-Type"]="application/json",r["Content-Length"]=Buffer.byteLength(e.data)),r}(e,f),f}async function $(e){const{requestConfig:t}=e;return await(r=t,new Promise(((e,t)=>{const o=p(r.data);r.data=o?r.data:JSON.stringify(r.data);const n=T(r);function a(t){const{statusCode:r,headers:o}=t,n=[];t.on("data",(e=>n.push(e))),t.on("end",(()=>{const t=Buffer.concat(n);e({statusCode:r,headers:o,data:t})}))}let u;u="http:"===n.protocol?i.request(n,a):s.request(n,a),u.on("timeout",(()=>{t(new Error(`Timeout ${r.timeout}ms`))})),u.on("error",(e=>{t(e)})),"POST"!==n.method||o||u.write(r.data),u.end()})));var r}function b(e){return y(e)?e.map((e=>g(e)?e:{url:e})):[g(e)?e:{url:e}]}function j(e,t,r){r.requestConfigs=t.map((t=>{let{url:o,timeout:n,proxy:i,maxRetry:s,priority:a}=t;return p(e.baseUrl)||(o=e.baseUrl+o),p(n)&&(n=p(r.timeout)?e.timeout:r.timeout),p(i)&&!p(e.proxy)&&(i=e.proxy),p(s)&&(s=p(r.maxRetry)?e.maxRetry:r.maxRetry),p(a)&&(a=0),{...t,url:o,timeout:n,proxy:i,maxRetry:s,priority:a}})),p(r.intervalTime)&&!p(e.intervalTime)&&(r.intervalTime=e.intervalTime)}function E(e){let t=null,r=null,n=!1,i=0;const s=new Map;async function a(e,r){const{id:o,requestConfig:n}=e,i=await t.newPage();await i.setViewport({width:1280,height:1024});let a=null;try{n.proxy?await t.createIncognitoBrowserContext({proxyServer:n.proxy}):await t.createIncognitoBrowserContext({proxyServer:void 0}),n.headers&&await i.setExtraHTTPHeaders(n.headers),n.cookies&&await i.setCookie(...function(e,t){const r=[];return"string"==typeof t?t.split("; ").forEach((t=>{const o=t.split("=");r.push({name:o[0],value:o[1],url:e})})):Array.isArray(t)?t.forEach((t=>{t.url||(t.url=e),r.push(t)})):"object"==typeof t&&t&&(t.url||(t.url=e),r.push(t)),r}(n.url,n.cookies)),a=await i.goto(n.url,{timeout:n.timeout})}catch(e){let t=s.get(r);throw t||(t=new Map,s.set(r,t)),t.get(o)||t.set(o,i),e}return{response:a,page:i}}return async function(u,c){const l=++i;n||(n=!0,r=o.launch().then((e=>{t=e}))),r&&(await r,r&&(r=null));const{requestConfigs:f,intervalTime:m}=function(e,t){const r={requestConfigs:[]},o=[];if(g(t)&&Object.hasOwn(t,"requestConfigs")){const{requestConfigs:e,timeout:n,cookies:i,intervalTime:s,maxRetry:a}=t;r.cookies=i,r.intervalTime=s,r.maxRetry=a,r.timeout=n,o.push(...b(e))}else{const e=b(t);o.push(...e)}return j(e,o,r),r.requestConfigs.forEach((e=>{const{cookies:t}=e;p(t)&&!p(r.cookies)&&(e.cookies=r.cookies)})),r}(e,u),h=(await q("page",e.mode,f,m,l,a)).map((e=>{const{id:r,isSuccess:o,maxRetry:n,crawlCount:i,errorQueue:a,crawlSingleRes:u}=e;let f=null;if(o&&u)f={browser:t,...u};else{const e=s.get(l).get(r);f={browser:t,response:null,page:e}}const m={id:r,isSuccess:o,maxRetry:n,crawlCount:i,retryCount:i-1,errorQueue:a,data:f};return c&&c(m),m}));return s.delete(l),y(u)||g(u)&&Object.hasOwn(u,"requestConfigs")?h:h[0]}}function O(e){return async function(t,r){const{requestConfigs:o,intervalTime:n}=function(e,t){const r={requestConfigs:[]},o=[];if(g(t)&&Object.hasOwn(t,"requestConfigs")){const{requestConfigs:e,timeout:n,intervalTime:i,maxRetry:s}=t;r.intervalTime=i,r.maxRetry=s,r.timeout=n,o.push(...b(e))}else{const e=b(t);o.push(...b(e))}return j(e,o,r),r}(e,t),i=(await q("data",e.mode,o,n,void 0,$)).map((e=>{const{id:t,isSuccess:o,maxRetry:n,crawlCount:i,errorQueue:s,crawlSingleRes:a}=e,u={id:t,isSuccess:o,maxRetry:n,crawlCount:i,retryCount:i-1,errorQueue:s,data:null};if(o&&a){const e=(a.headers["content-type"]??"").includes("text")?a.data.toString():JSON.parse(a.data.toString());u.data={...a,data:e}}return r&&r(u),u}));return y(t)||g(t)&&Object.hasOwn(t,"requestConfigs")?i:i[0]}}function k(o){return async function(n,i){const{requestConfigs:s,intervalTime:a,fileConfig:u}=function(e,t){const r={requestConfigs:[],timeout:t.timeout,intervalTime:t.intervalTime,maxRetry:t.maxRetry,fileConfig:t.fileConfig};return j(e,b(t.requestConfig),r),r.requestConfigs.forEach((e=>{p(e.storeDir)&&!p(t.fileConfig?.storeDir)&&(e.storeDir=t.fileConfig.storeDir),p(e.extension)&&!p(t.fileConfig?.extension)&&(e.extension=t.fileConfig.extension)})),r}(o,n),l=await q("file",o.mode,s,a,void 0,$),h=[],d=[],g=l.map((o=>{const{id:n,isSuccess:s,maxRetry:a,crawlCount:c,errorQueue:l,crawlSingleRes:f,requestConfig:m}=o,g={id:n,isSuccess:s,maxRetry:a,crawlCount:c,retryCount:c-1,errorQueue:l,data:null};if(s&&f){const o=f.headers["content-type"]??"";let s="",a="";s=p(m.fileName)?(new Date).getTime().toString():m.fileName,a=p(m.extension)?"."+o.split("/").pop():m.extension,p(m.storeDir)||t.existsSync(m.storeDir)||(y=m.storeDir,e.resolve(y).split(e.sep).reduce(((r,o,n)=>{const i=0!==n?e.join(r,o):o;return t.existsSync(i)||t.mkdirSync(i),i}),""));const c=m.storeDir??__dirname,l=e.resolve(c,s+a);let w=f.data;if(u?.beforeSave){const e=u.beforeSave({id:n,fileName:s,filePath:l,data:w});e&&(w=e)}const C=r.writeFile(l,w).catch((e=>{const t=`File save error at id ${n}: ${e.message}`;return d.push({message:t,valueOf:()=>n}),!0})).then((e=>{const t=f.data.length,r={isSuccess:!e,fileName:s,mimeType:o,size:t,filePath:l};g.data={...f,data:r},i&&i(g)}));h.push(C)}else i&&i(g);var y;return g}));var w;await Promise.all(h),(w=d,function e(t,r){if(t>=r)return;const o=w[r];let n=t,i=r-1;for(;n<=i;){for(;w[n]<o;)n++;for(;w[i]>o;)i--;n<=i&&(S(w,n,i),n++,i--)}S(w,n,r),e(t,n-1),e(n+1,r)}(0,w.length-1),w).forEach((e=>c(m(e.message))));const C=[],x=[];return g.forEach((e=>{e.data?.data.isSuccess?C.push(e.id):x.push(e.id)})),c("Save file final result:"),c(f(`  Success - total: ${C.length}, ids: [ ${C.join(" - ")} ]`)),c(m(`    Error - total: ${x.length}, ids: [ ${x.join(" - ")} ]`)),y(n.requestConfig)?g:g[0]}}function P(e,t){const{d:r,h:o,m:n}=e,i=(p(r)?0:1e3*r*60*60*24)+(p(o)?0:1e3*o*60*60)+(p(n)?0:1e3*n*60);let s=0;u();const a=setInterval(u,i);function u(){console.log(f(`Start the ${h.bold(++s)} polling`)),t(s,c)}function c(){clearInterval(a),console.log(f("Stop the polling"))}}const D=function(e){const t=function(e){const t=e||{};return t.mode||(t.mode="async"),p(e?.timeout)&&(t.timeout=1e4),p(e?.maxRetry)&&(t.maxRetry=0),t}(e);return function(e){return{crawlPage:E(e),crawlData:O(e),crawlFile:k(e),startPolling:P}}(t)}({timeout:1e4,intervalTime:{max:3e3,min:1e3},proxy:"http://localhost:14892"});D.crawlFile({requestConfig:[{url:"https://raw.githubusercontent.com/coder-hxl/airbnb-upload/master/area/4403.jpg",fileName:"4403",extension:".jpg"},{url:"http://127.0.0.1:5500/assets/cn/crawler.png",fileName:"crawler",storeDir:e.resolve(__dirname,"./upload/2/1")}],fileConfig:{storeDir:e.resolve(__dirname,"./upload"),beforeSave(e){console.log(e.fileName,e.filePath)}}}).then((e=>{e.forEach((e=>{console.log(e.id),e.errorQueue.forEach((e=>console.log(e.message)))}))}));
