"use strict";var e=require("node:path"),t=require("node:fs"),o=require("jsdom"),n=require("node:https"),r=require("node:url"),s=require("https");function i(e,t){let o=e?`${e}`:"?";if(t)for(const e in t){o+=`&${e}=${t[e]}`}else o=e;return o}function a(e){const{hostname:t,port:o,pathname:n,search:a}=new r.URL(e.url),u={agent:new s.Agent({}),hostname:t,port:o,path:n,search:i(a,e.params),method:e.method?.toLocaleUpperCase()??"GET",headers:{},timeout:e.timeout};return u.headers=function(e,t){const o={"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36",...t};return"POST"===t.method&&e.data&&(o["Content-Type"]="application/json",o["Content-Length"]=Buffer.byteLength(e.data)),o}(e,u),u}function u(e,t){const{baseUrl:o,timeout:n,intervalTime:r}=e,{requestConifg:s,intervalTime:i}=t,a=m(s)?s:[s];for(const e of a){const{url:t,timeout:r}=e;e.url=o+t,f(r)&&(e.timeout=n)}return f(i)&&(t.intervalTime=r),t}function c(e){return new Promise((t=>setTimeout(t,e)))}function l(e,t=0){let o=Math.floor(Math.random()*e);return o<t&&(o=l(e,t)),o}function f(e){return void 0===e}function m(e){return Array.isArray(e)}function h(e){return new Promise(((t,o)=>{const r=e.data=e.data?JSON.stringify(e.data??""):e.data,s=a(e),i=n.request(s,(e=>{const{headers:o}=e,n=[];e.on("data",(e=>n.push(e))),e.on("end",(()=>{const e=Buffer.concat(n);t({headers:o,data:e})}))}));i.on("timeout",(()=>{console.log("Timeout Error"),o(new Error("Timeout"))})),i.on("error",(e=>{console.log("Error: ",e.message),o(e)})),"POST"===s.method&&i.write(r),i.end()}))}async function g(e,t,o){const n=e.length;let r=0;console.log(`Begin execution, total: ${n} `);for(const s of e){r++;if(o(await h(s),r),f(t)||r===n)console.log(`The ${r} request is success, all requests completed!`);else{const e="number"==typeof t?t:l(t.max,t.min);console.log(`The ${r} request is success, sleep for ${e}ms`),await c(e)}}}class d{baseConfig;constructor(e={}){this.baseConfig=e}async fetch(e){const{requestConifg:t,intervalTime:o}=u(this.baseConfig,e),n=m(t),r=n?t:[t],s=[];await g(r,o,(e=>{s.push(JSON.parse(e.data.toString()))}));return n?s:s[0]}fetchFile(o){return new Promise((n=>{const{requestConifg:r,intervalTime:s,fileConfig:i}=u(this.baseConfig,o);let a=0;const c=[];const l=m(r)?r:[r];g(l,s,(function(o,r){const{headers:s,data:u}=o,f=s["content-type"]??"",m=f.split("/").pop(),h=(new Date).getTime().toString(),g=e.resolve(i.storeDir,`${h}.${m}`);t.createWriteStream(g,"binary").write(u,(e=>{if(e)return console.log(`File save error requested for the ${r}: ${e.message}`);c.push({fileName:h,mimeType:f,size:u.length,filePath:g}),++a===l.length&&(console.log("All files downloaded successfully!"),n(c))}))}))}))}async fetchHTML(e){const{requestConifg:t}=u(this.baseConfig,{requestConifg:{url:e}}),n=(await h(t)).data.toString();return new o.JSDOM(n)}}new d({timeout:1e4,intervalTime:{max:3e3,min:1e3}});new d({timeout:1e4,intervalTime:{max:3e3,min:1e3}}).fetchFile({requestConifg:{url:"https://docs.github.com/assets/cb-262/images/octicons/search-16.svg",method:"GET"},fileConfig:{storeDir:e.resolve(__dirname,"./upload")}}).then((e=>{console.log(e)}));
